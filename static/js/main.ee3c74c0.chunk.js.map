{"version":3,"sources":["ErrorMsg/ErrorMsg.js","NavBar/NavBar.js","FeedbackMsg/FeedbackMsg.js","TaskDescription/TaskDescription.js","QuestionTask/QuestionTask.js","PhotoTask/PhotoTask.js","ShortAnswerTask/ShortAnswerTask.js","ScanQRCodeTask/ScanQRCodeTask.js","ActivityPage/ActivityPage.js","ActivityListPage/ActivityListPage.js","LocationPage/LocationPage.js","LocationsPage/LocationsPage.js","SignUpPage/SignUpPage.js","LoginPage/LoginPage.js","App.js","serviceWorker.js","index.js"],"names":["ErrorMsg","_ref","message","react_default","a","createElement","className","react_onsenui","icon","NavBar","title","navigator","backButton","onClick","popPage","modifier","ons","confirm","buttonLabels","then","response","localStorage","removeItem","resetPage","component","LoginPage","props","key","concat","Date","now","signOut","FeedbackMsg","type","TaskDescription","name","description","COLOURS","QuestionTask","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","myRef","React","createRef","state","isCorrect","isDone","handleClick","bind","assertThisInitialized","optionId","selection","activity","options","find","option","_id","setState","correct","current","scrollIntoView","behavior","setActivityDone","_this2","ref","src_FeedbackMsg_FeedbackMsg","src_TaskDescription_TaskDescription","activityName","activityDescription","map","index","colour","style","backgroundColor","disabled","answer","Component","PhotoTask","pictureURL","handleChange","event","data","FormData","append","target","files","locationName","headers","Authorization","Content-Type","axios","post","res","console","log","link","catch","err","size","color","display","accept","onChange","src","width","alt","ShortAnswerTask","answers","item","toLowerCase","includes","trim","value","float","placeholder","readOnly","required","ripple","ScanQRCodeTask","handleScan","content","displayCamera","alert","handleError","error","lib_default","delay","onError","onScan","ActivityPage","selectedAnswer","picture","renderToolbar","src_NavBar_NavBar","src_PhotoTask_PhotoTask","src_QuestionTask_QuestionTask","src_ShortAnswerTask_ShortAnswerTask","src_ScanQRCodeTask_ScanQRCodeTask","ActivityListPage","activities","activitiesCompleted","isLoading","errors","renderRow","renderThumbnail","pushPage","fetchActivityList","fetchActivityProgress","id","updatedProgress","toConsumableArray","token","every","v","setLocationDone","locationId","activityType","height","_this3","URI","get","_this4","length","row","_this5","tappable","minWidth","_this6","indeterminate","dataSource","renderHeader","textAlign","LocationPage","location","result","getMap","hideCamera","resetState","renderDescription","renderCamera","getDistance","isWithinLocation","lat1","lon1","lat2","lon2","deg2rad","deg","Math","PI","dLat","dLon","sin","cos","atan2","sqrt","geolocation","getCurrentPosition","pos","coords","latitude","longitude","distance","enableHighAccuracy","window","open","replace","isCompleted","image","address","hours","margin","LocationsPage","locations","locationsCompleted","handleLocationSelection","fetchLocations","fetchLocationsProgress","maxWidth","subtitle","SignUpPage","email","password","password2","handleRegistration","_this$state","payload","objectWithoutProperties","e","disable-auto-styling","src_ErrorMsg_ErrorMsg","getItem","handleLogin","openSignUpPage","openLocationsPage","setItem","renderPage","route","App","initialRoute","onDeviceBackButton","Boolean","hostname","match","ReactDOM","render","src_App_0","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ee3c74c0.chunk.js","sourcesContent":["import React from 'react';\nimport { Icon } from \"react-onsenui\";\nimport \"./ErrorMsg.css\";\n\nconst ErrorMsg = ({ message }) => {\n  return (\n    <div className=\"ErrorMsg\">\n      <Icon icon=\"fa-exclamation-circle\" />\n      <span> {message}</span>\n    </div>\n  );\n}\n\nexport default ErrorMsg;","import React from \"react\";\r\nimport { Toolbar, BackButton, Button, Icon } from \"react-onsenui\";\r\nimport \"./NavBar.css\";\r\nimport * as ons from \"onsenui\";\r\nimport LoginPage from \"../LoginPage/LoginPage\";\r\n\r\nconst signOut = navigator => {\r\n  ons.notification\r\n    .confirm(\"Are you sure you want to log out?\", {\r\n      buttonLabels: [\"Yes\", \"No\"]\r\n    })\r\n    .then(response => {\r\n      if (response === 0) {\r\n        localStorage.removeItem(\"scavengerHuntTkn\");\r\n        navigator.resetPage({\r\n          component: LoginPage,\r\n          props: { key: `LOGIN_PAGE${Date.now()}` }\r\n        });\r\n      }\r\n    });\r\n};\r\n\r\nconst NavBar = ({ title, navigator, icon, backButton }) => (\r\n  <Toolbar className=\"NavBar\">\r\n    <div className=\"left NavBar-left\">\r\n      {backButton ? <BackButton onClick={() => navigator.popPage()} /> : null}\r\n    </div>\r\n    <div className=\"center NavBar-center\">\r\n      {icon} {title}\r\n    </div>\r\n    <div className=\"right\">\r\n      <Button modifier=\"large--quiet\" onClick={() => signOut(navigator)}>\r\n        <Icon className=\"SignOut-icon\" icon=\"fa-sign-out-alt\" />\r\n      </Button>\r\n    </div>\r\n  </Toolbar>\r\n);\r\n\r\nexport default NavBar;\r\n","import React from \"react\";\nimport { Icon } from \"react-onsenui\";\nimport \"./FeedbackMsg.css\";\n\nconst FeedbackMsg = ({ type }) => {\n  return (\n    <div\n      className={\n        \"FeedbackMsg \" +\n        (type === \"correct\" ? \"FeedbackMsg-correct\" : \"FeedbackMsg-wrong\")\n      }\n    >\n      <Icon icon={type === \"correct\" ? \"check\" : \"times\"} />\n      &nbsp;&nbsp;{type === \"correct\" ? \"Completed!\" : \"Try again!\"}\n    </div>\n  );\n};\n\nexport default FeedbackMsg;\n","import React from 'react';\nimport \"./TaskDescription.css\";\n\nconst TaskDescription = ({name, description}) => {\n  return (\n    <div className=\"TaskDescription-wrapper\">\n      <span className=\"TaskDescription-name\">\n        {name}\n      </span>\n      <p className=\"TaskDescription-details\">{description}</p>\n    </div>\n  );\n}\n\nexport default TaskDescription;","import React, { Component } from \"react\";\nimport { Button } from \"react-onsenui\";\nimport \"./QuestionTask.css\";\nimport FeedbackMsg from \"../FeedbackMsg/FeedbackMsg\";\nimport TaskDescription from \"../TaskDescription/TaskDescription\";\n\n// const COLOURS = [\"#E3423C\", \"#D89E28\", \"#1268CE\", \"#458F0F\", \"#B87341\"];\nconst COLOURS = [\"#732181\", \"#009ABE\", \"#81BC00\", \"#F38A00\", \"#EA1C75\"];\n\nclass QuestionTask extends Component {\n  constructor(props) {\n    super(props);\n\n    this.myRef = React.createRef();\n\n    this.state = {\n      isCorrect: this.props.isDone,\n    };\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(optionId) {\n    if (this.state.isCorrect) return;\n    \n    const selection = this.props.activity.options.find(\n      option => option._id === optionId\n    );\n\n    this.setState({ isCorrect: selection.correct });\n  }\n\n  componentDidUpdate() {\n    this.myRef.current.scrollIntoView({ behavior: 'smooth' }); // scroll to the top\n    \n    if (this.state.isCorrect) {\n      this.props.setActivityDone(this.props.activity._id);\n    }\n  }\n\n  render() {\n    const activity = this.props.activity;\n\n    return (\n      <div ref={this.myRef} className=\"QuestionTask-wrapper\">\n        {this.state.isCorrect && <FeedbackMsg type=\"correct\" />}\n        {this.state.isCorrect === false && <FeedbackMsg type=\"wrong\" />}\n        <TaskDescription\n          name={activity.activityName}\n          description={activity.activityDescription}\n        />\n        {activity.options.map((option, index) => {\n          const colour = COLOURS[index];\n          return (\n            <Button\n              key={option._id}\n              modifier=\"large--cta\"\n              className=\"QuestionTask-button\"\n              style={(this.state.isCorrect && !option.correct) ? {} : { backgroundColor: colour }}\n              onClick={() => this.handleClick(option._id)}\n              disabled={(this.state.isCorrect && !option.correct) ? true : false}\n            >\n              {option.answer}\n            </Button>\n          );\n        })}\n      </div>\n    );\n  }\n}\n\nexport default QuestionTask;\n","import React, { Component } from \"react\";\nimport { Icon } from \"react-onsenui\";\nimport \"./PhotoTask.css\";\nimport axios from \"axios\";\nimport FeedbackMsg from \"../FeedbackMsg/FeedbackMsg\";\nimport TaskDescription from \"../TaskDescription/TaskDescription\";\n\nconst IMGUR_TOKEN = \"Bearer 2c43803a6844c641fd484634c4c591d355c4aaef\";\nconst IMGUR_POST_LINK = \"https://api.imgur.com/3/image\";\nconst IMGUR_ALBUM_ID = \"3OYirzt\";\n\nclass PhotoTask extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      pictureURL: null,\n      isDone: this.props.isDone\n    }\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event) {\n    const data = new FormData();\n    data.append(\"image\", event.target.files[0]);\n    data.append(\"album\", IMGUR_ALBUM_ID);\n    data.append(\"title\", `${this.props.locationName} - ${this.props.activity.activityName}`);\n\n    const headers = {\n      Authorization: IMGUR_TOKEN,\n      \"Content-Type\": \"multipart/form-data\"\n    };\n\n    axios\n      .post(IMGUR_POST_LINK, data, { headers })\n      .then(res => {\n        console.log(res.data);\n        this.setState({\n          pictureURL: res.data.data.link,\n          isDone: true\n        })\n      })\n      .catch(err => {\n        console.log(err.response.data);\n      });\n  }\n\n  componentDidUpdate() {\n    if (this.state.isDone) {\n      this.props.setActivityDone(this.props.activity._id);\n    }\n  }\n\n  render() {\n    const activity = this.props.activity;\n\n    return (\n      <div className=\"PhotoTask-wrapper\">\n        {this.state.isDone && <FeedbackMsg type=\"correct\" />}\n        <TaskDescription\n          name={activity.activityName}\n          description={activity.activityDescription}\n        />\n        {!this.state.isDone &&\n          <div className=\"PhotoTask-camera_wrapper\">\n            <label className=\"PhotoTask-camera_label\">\n              <Icon icon='camera' size={72} style={{ color: '#FABC39' }} />\n              <input style={{ display: 'none' }} type=\"file\" accept=\"image/*;capture=camera\" onChange={this.handleChange} />\n            </label>\n          </div>\n        }\n        {this.state.pictureURL &&\n          <div>\n            <img src={this.state.pictureURL} style={{width: \"100%\"}} alt=\"\" />\n          </div>\n        }\n      </div>\n\n    );\n  }\n}\n\nexport default PhotoTask;","import React, { Component } from \"react\";\nimport { Input, Button } from \"react-onsenui\";\nimport \"./ShortAnswerTask.css\";\nimport FeedbackMsg from \"../FeedbackMsg/FeedbackMsg\";\nimport TaskDescription from \"../TaskDescription/TaskDescription\";\n\nclass ShortAnswerTask extends Component {\n  constructor(props) {\n    super(props);\n    this.myRef = React.createRef();\n\n    this.state = {\n      isCorrect: this.props.isDone,\n      answer: \"\"\n    };\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    if (this.state.isCorrect) return;\n\n    const activity = this.props.activity;\n    const answers = activity.answers.map(item => item.toLowerCase());\n\n    this.setState({ isCorrect: answers.includes(this.state.answer.toLowerCase().trim()) });\n  }\n\n  componentDidUpdate() {\n    this.myRef.current.scrollIntoView({ behavior: 'smooth' }); // scroll to the top\n\n    if (this.state.isCorrect) {\n      this.props.setActivityDone(this.props.activity._id);\n    }\n  }\n\n  render() {\n    const activity = this.props.activity;\n\n    return (\n      <div ref={this.myRef} className=\"ShortAnswerTask-wrapper\">\n        {this.state.isCorrect && <FeedbackMsg type=\"correct\" />}\n        {this.state.isCorrect === false && <FeedbackMsg type=\"wrong\" />}\n        <TaskDescription\n          name={activity.activityName}\n          description={activity.activityDescription}\n        />\n        <div className=\"ShortAnswerTask-answer_wrapper\">\n          <div>\n            <Input\n              className=\"ShortAnswerTask-input\"\n              value={this.state.isCorrect ? activity.answers[0] : this.state.answer}\n              float\n              onChange={event => {\n                this.setState({ answer: event.target.value });\n              }}\n              type=\"text\"\n              placeholder={this.state.isCorrect ? \"The answer\" : \"Your answer\"}\n              readOnly={this.state.isCorrect ? true : false}\n              required\n            />\n          </div>\n          <Button\n            className=\"ShortAnswerTask-button\"\n            modifier='cta'\n            ripple\n            onClick={this.handleClick}\n            disabled={this.state.isCorrect ? true : false}\n          >\n            Submit\n          </Button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ShortAnswerTask;","import React, { Component } from \"react\";\nimport * as ons from 'onsenui';\nimport QrReader from 'react-qr-reader';\nimport \"./ScanQRCodeTask.css\";\nimport FeedbackMsg from \"../FeedbackMsg/FeedbackMsg\";\nimport TaskDescription from \"../TaskDescription/TaskDescription\";\n\nclass ScanQRCodeTask extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      displayCamera: null,\n      isDone: this.props.isDone\n    };\n\n    this.displayCamera = this.displayCamera.bind(this);\n  }\n\n  displayCamera() {\n    this.setState({\n      displayCamera: true\n    });\n  }\n\n  handleScan = data => {\n    const activity = this.props.activity;\n    if (data) {\n      if (data === activity.content) {\n        this.setState({\n          isDone: true,\n          displayCamera: false,\n        });\n      } else {\n        ons.notification.alert({\n          message: 'Sorry, seems like you scanned a wrong QR code!',\n          title: \"Ooops\"\n        });\n      }\n    }\n  }\n\n  handleError = err => {\n    console.error(err)\n  }\n\n  componentDidUpdate() {\n    if (this.state.isDone) {\n      this.props.setActivityDone(this.props.activity._id);\n    }\n  }\n\n  render() {\n    const activity = this.props.activity;\n\n    return (\n      <div className=\"ScanQRCodeTask-wrapper\">\n        {this.state.isDone && <FeedbackMsg type=\"correct\" />}\n        <TaskDescription\n          name={activity.activityName}\n          description={activity.activityDescription}\n        />\n        {!this.state.isDone ? (\n          <div>\n            <QrReader\n              delay={1000}\n              onError={this.handleError}\n              onScan={this.handleScan}\n              style={{ width: '100%' }}\n            />\n          </div>\n        ) : (\n          <div className=\"ScanQRCodeTask-content\">\n            {activity.content}\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default ScanQRCodeTask;\n","import React, { Component } from \"react\";\r\nimport { Page, Icon } from \"react-onsenui\";\r\nimport NavBar from \"../NavBar/NavBar\";\r\nimport \"./ActivityPage.css\";\r\nimport QuestionTask from \"../QuestionTask/QuestionTask\";\r\nimport PhotoTask from \"../PhotoTask/PhotoTask\";\r\nimport ShortAnswerTask from \"../ShortAnswerTask/ShortAnswerTask\";\r\nimport ScanQRCodeTask from \"../ScanQRCodeTask/ScanQRCodeTask\";\r\n\r\nclass ActivityPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    \r\n    this.state = {\r\n      selectedAnswer: null,\r\n      picture: null,\r\n      pictureURL: null\r\n    };\r\n  }\r\n\r\n  // componentWillUnmount() {\r\n  //   this.props.setDone(this.props.id);\r\n  // }\r\n  \r\n  render() {\r\n    const activity = this.props.activity;\r\n\r\n    return (\r\n      <Page\r\n        renderToolbar={() => (\r\n          <NavBar\r\n            title=\"Task\"\r\n            navigator={this.props.navigator}\r\n            icon={<Icon icon=\"thumbtack\" />}\r\n            backButton\r\n          />\r\n        )}\r\n      >\r\n        {activity.type === \"photo\" && <PhotoTask {...this.props} />}\r\n        {activity.type === \"multiple-choice-question\" && <QuestionTask {...this.props} />}\r\n        {activity.type === \"short-answer\" && <ShortAnswerTask {...this.props} />}\r\n        {activity.type === \"qr-code\" && <ScanQRCodeTask {...this.props} />}\r\n      </Page>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ActivityPage;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Page,\r\n  List,\r\n  ListHeader,\r\n  ListItem,\r\n  Icon,\r\n  ProgressBar\r\n} from \"react-onsenui\";\r\nimport ActivityPage from \"../ActivityPage/ActivityPage\";\r\nimport NavBar from \"../NavBar/NavBar\";\r\nimport \"./ActivityListPage.css\";\r\nimport axios from \"axios\";\r\n\r\n// https://cors-anywhere.herokuapp.com/http://159.203.3.180\r\nconst LOCATION_QUERY_URI = \"https://cors-anywhere.herokuapp.com/http://159.203.3.180/api/locations/\";\r\nconst PROGRESS_QUERY_URI = \"https://cors-anywhere.herokuapp.com/http://159.203.3.180/api/users/activities\";\r\nconst PROGRESS_UPDATE_URI = \"https://cors-anywhere.herokuapp.com/http://159.203.3.180/api/users/activities/\";\r\n\r\nclass ActivityListPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      activities: [],\r\n      activitiesCompleted: [],\r\n      isLoading: false,\r\n      errors: \"\"\r\n    };\r\n\r\n    this.renderRow = this.renderRow.bind(this);\r\n    this.renderThumbnail = this.renderThumbnail.bind(this);\r\n    this.pushPage = this.pushPage.bind(this);\r\n    this.fetchActivityList = this.fetchActivityList.bind(this);\r\n    this.fetchActivityProgress = this.fetchActivityProgress.bind(this);\r\n    this.setActivityDone = this.setActivityDone.bind(this);\r\n  }\r\n\r\n  setActivityDone(id) {\r\n    const updatedProgress = [...this.state.activitiesCompleted, id];\r\n\r\n    const headers = {\r\n      Authorization: this.props.token\r\n    };\r\n\r\n    axios\r\n      .post(`${PROGRESS_UPDATE_URI}${id}`, {}, { headers })\r\n      .then(res => {\r\n        this.setState({ activitiesCompleted: updatedProgress });\r\n        const activitiesIDs = this.state.activities.map(item => item._id);\r\n        const areAllActivitiesDone = activitiesIDs.every(v =>\r\n          updatedProgress.includes(v)\r\n        );\r\n        if (areAllActivitiesDone) {\r\n          this.props.setLocationDone(this.props.locationId);\r\n        }\r\n        console.log(res.data);\r\n      })\r\n      .catch(err => {\r\n        console.log(err.response.data);\r\n      });\r\n  }\r\n\r\n  // componentWillUnmount() {\r\n  //   this.props.resetState();\r\n  // }\r\n\r\n  renderThumbnail(activityType) {\r\n    if (activityType === \"photo\") {\r\n      return (\r\n        <Icon\r\n          icon=\"camera\"\r\n          size={32}\r\n          className=\"list-item__thumbnail\"\r\n          style={{ color: \"#FABC39\", height: \"auto\", width: 10 }}\r\n        />\r\n      );\r\n    } else if (activityType === \"multiple-choice-question\") {\r\n      return (\r\n        <Icon\r\n          icon=\"list-alt\"\r\n          size={32}\r\n          className=\"list-item__thumbnail\"\r\n          style={{ color: \"#F17D80\", height: \"auto\", width: 10 }}\r\n        />\r\n      );\r\n    } else if (activityType === \"short-answer\") {\r\n      return (\r\n        <Icon\r\n          icon=\"question-circle\"\r\n          size={32}\r\n          className=\"list-item__thumbnail\"\r\n          style={{ color: \"#AB19DB\", height: \"auto\", width: 10 }}\r\n        />\r\n      );\r\n    } else if (activityType === \"qr-code\") {\r\n      return (\r\n        <Icon\r\n          icon=\"qrcode\"\r\n          size={32}\r\n          className=\"list-item__thumbnail\"\r\n          style={{ color: \"#68A8AD\", height: \"auto\", width: 10 }}\r\n        />\r\n      );\r\n    }\r\n  }\r\n\r\n  pushPage(id) {\r\n    this.props.navigator.pushPage({\r\n      component: ActivityPage,\r\n      props: {\r\n        activity: this.state.activities.find(item => item._id === id),\r\n        isDone: this.state.activitiesCompleted.includes(id) ? true : null,\r\n        setActivityDone: this.setActivityDone,\r\n        setLocationDone: this.props.setLocationDone,\r\n        locationId: this.props.locationId,\r\n        locationName: this.state.locationName,\r\n        key: `ACTIVITY_PAGE_${Date.now()}`,\r\n      }\r\n    });\r\n  }\r\n\r\n  fetchActivityList() {\r\n    this.setState({ isLoading: true });\r\n\r\n    const headers = {\r\n      Authorization: this.props.token\r\n    };\r\n\r\n    const URI = `${LOCATION_QUERY_URI}${this.props.locationId}`;\r\n\r\n    axios\r\n      .get(URI, { headers })\r\n      .then(res =>\r\n        this.setState({\r\n          activities: res.data.activities,\r\n          locationName: res.data.title,\r\n          isLoading: false\r\n        })\r\n      )\r\n      .catch(err => {\r\n        this.setState({\r\n          errors: err.response,\r\n          isLoading: false\r\n        });\r\n      });\r\n  }\r\n\r\n  fetchActivityProgress() {\r\n    this.setState({ isLoading: true });\r\n\r\n    const headers = {\r\n      Authorization: this.props.token\r\n    };\r\n\r\n    axios\r\n      .get(PROGRESS_QUERY_URI, { headers })\r\n      .then(res =>\r\n        this.setState({\r\n          activitiesCompleted: res.data.activitiesCompleted,\r\n          isLoading: false\r\n        })\r\n      )\r\n      .catch(err => {\r\n        this.setState({\r\n          errors: err.response,\r\n          isLoading: false\r\n        });\r\n      });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchActivityList();\r\n\r\n    if (this.state.activitiesCompleted.length === 0) {\r\n      this.fetchActivityProgress();\r\n    }\r\n  }\r\n\r\n  renderRow(row, index) {\r\n    return (\r\n      <ListItem\r\n        key={row._id}\r\n        modifier={\r\n          index === this.state.activities.length - 1 ? \"longdivider\" : null\r\n        }\r\n        onClick={() => this.pushPage(row._id)}\r\n        tappable\r\n      >\r\n        <div\r\n          className=\"left ActivityListPage-thumbnail\"\r\n          style={{ minWidth: 60 }}\r\n        >\r\n          {/* <img src={row.image} className='list-item__thumbnail LocationsPage-thumbnail' /> */}\r\n          {this.renderThumbnail(row.type)}\r\n          {this.state.activitiesCompleted.includes(row._id) && (\r\n            <Icon\r\n              icon=\"check-circle\"\r\n              size={24}\r\n              className=\"ActivityListPage-checkmark\"\r\n            />\r\n          )}\r\n        </div>\r\n        <div className=\"center ActivityListPage-task_title\">\r\n          {row.activityName}\r\n        </div>\r\n        <div className=\"right\">\r\n          <Icon icon=\"fa-chevron-right\" style={{ color: \"#CCC\" }} />\r\n        </div>\r\n      </ListItem>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Page\r\n        renderToolbar={() => (\r\n          <NavBar\r\n            title=\"Activities\"\r\n            navigator={this.props.navigator}\r\n            icon={<Icon icon=\"tasks\" />}\r\n            backButton\r\n          />\r\n        )}\r\n      >\r\n        {this.state.isLoading && <ProgressBar indeterminate />}\r\n        <List\r\n          dataSource={this.state.activities}\r\n          renderRow={this.renderRow}\r\n          renderHeader={() => (\r\n            <ListHeader style={{ textAlign: \"center\" }}>\r\n              {this.state.locationName}\r\n            </ListHeader>\r\n          )}\r\n        />\r\n      </Page>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ActivityListPage;\r\n","import React, { Component } from \"react\";\r\nimport * as ons from \"onsenui\";\r\nimport { Page, Button, Icon } from \"react-onsenui\";\r\nimport QrReader from \"react-qr-reader\";\r\nimport ActivityListPage from \"../ActivityListPage/ActivityListPage\";\r\nimport NavBar from \"../NavBar/NavBar\";\r\nimport \"./LocationPage.css\";\r\nimport FeedbackMsg from \"../FeedbackMsg/FeedbackMsg\";\r\n\r\nclass LocationPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      result: null,\r\n      displayCamera: false\r\n    };\r\n\r\n    this.getMap = this.getMap.bind(this);\r\n    this.handleScan = this.handleScan.bind(this);\r\n    this.handleError = this.handleError.bind(this);\r\n    this.displayCamera = this.displayCamera.bind(this);\r\n    this.hideCamera = this.hideCamera.bind(this);\r\n    this.pushPage = this.pushPage.bind(this);\r\n    this.resetState = this.resetState.bind(this);\r\n    this.renderDescription = this.renderDescription.bind(this);\r\n    this.renderCamera = this.renderCamera.bind(this);\r\n    this.getDistance = this.getDistance.bind(this);\r\n    this.isWithinLocation = this.isWithinLocation.bind(this);\r\n  }\r\n\r\n  handleScan = data => {\r\n    const location = this.props.location;\r\n    if (data) {\r\n      if (data === location._id) {\r\n        this.setState({\r\n          result: data,\r\n          displayCamera: false\r\n        });\r\n        this.pushPage(this.props.navigator);\r\n      } else {\r\n        this.setState({\r\n          displayCamera: false\r\n        });\r\n        ons.notification.alert(\r\n          `Sorry, looks like you are not at ${location.title}`\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  handleError = err => {\r\n    console.error(err);\r\n  };\r\n\r\n  displayCamera() {\r\n    this.setState({\r\n      displayCamera: true\r\n    });\r\n  }\r\n\r\n  hideCamera() {\r\n    this.setState({\r\n      displayCamera: false\r\n    });\r\n  }\r\n\r\n  getDistance(lat1, lon1, lat2, lon2) {\r\n    function deg2rad(deg) {\r\n      return deg * (Math.PI / 180);\r\n    }\r\n\r\n    var R = 6371; // Radius of the earth in km\r\n    var dLat = deg2rad(lat2 - lat1); // deg2rad below\r\n    var dLon = deg2rad(lon2 - lon1);\r\n    var a =\r\n      Math.sin(dLat / 2) * Math.sin(dLat / 2) +\r\n      Math.cos(deg2rad(lat1)) *\r\n        Math.cos(deg2rad(lat2)) *\r\n        Math.sin(dLon / 2) *\r\n        Math.sin(dLon / 2);\r\n    var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\r\n    var d = R * c; // Distance in km\r\n    return d;\r\n  }\r\n\r\n  isWithinLocation() {\r\n    const location = this.props.location;\r\n    //Check if Geolocation is supported\r\n    if (navigator.geolocation) {\r\n      navigator.geolocation.getCurrentPosition(\r\n        pos => {\r\n          console.log(location.coords.latitude);\r\n          console.log(location.coords.longitude);\r\n          const distance = this.getDistance(\r\n            pos.coords.latitude,\r\n            pos.coords.longitude,\r\n            location.coords.latitude,\r\n            location.coords.longitude\r\n          );\r\n          console.log(distance);\r\n          if (distance <= 0.3) {\r\n            this.pushPage(this.props.navigator);\r\n          } else {\r\n            ons.notification.alert(\r\n              `Sorry, looks like you are not at ${\r\n                location.title\r\n              }. Maybe get closer?`\r\n            );\r\n          }\r\n        },\r\n        null,\r\n        { enableHighAccuracy: true }\r\n      );\r\n    } else {\r\n      //If not, display a message to the user\r\n      console.log(\"Geolocation is not supported by your browser\");\r\n    }\r\n  }\r\n\r\n  getMap(locationName) {\r\n    window.open(`https://maps.google.com/?q=${locationName.replace(\" \", \"+\")}`);\r\n  }\r\n\r\n  resetState() {\r\n    this.setState({\r\n      result: null,\r\n      displayCamera: false\r\n    });\r\n  }\r\n\r\n  pushPage(navigator) {\r\n    navigator.pushPage({\r\n      component: ActivityListPage,\r\n      props: {\r\n        result: this.state.result,\r\n        resetState: this.resetState,\r\n        locationId: this.props.location._id,\r\n        token: this.props.token,\r\n        setLocationDone: this.props.setLocationDone,\r\n        key: `ACTIVITY_LIST_PAGE_${Date.now()}`\r\n      }\r\n    });\r\n  }\r\n\r\n  renderDescription() {\r\n    const location = this.props.location;\r\n    return (\r\n      <div>\r\n        {this.props.isCompleted && <FeedbackMsg type=\"correct\" />}\r\n        <div className=\"LocationPage-img-wrapper\">\r\n          <img src={location.image} alt={location.title} />\r\n        </div>\r\n        <div className=\"title center LocationPage-title\">{location.title}</div>\r\n        <div className=\"content LocationPage-info_wrapper\">\r\n          <div>\r\n            <div>\r\n              <p className=\"LocationPage-address_lbl\">Location</p>\r\n              <p className=\"LocationPage-address\">{location.address}</p>\r\n            </div>\r\n            <div>\r\n              <p className=\"LocationPage-hours_lbl\">Hours</p>\r\n              <p className=\"LocationPage-hours\">{location.hours}</p>\r\n            </div>\r\n            <div>\r\n              <p className=\"LocationPage-description_lbl\">Description</p>\r\n              <p className=\"LocationPage-hours\">{location.description}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <section style={{ margin: \"16px\" }}>\r\n          <div style={{ margin: \"6px\" }}>\r\n            <Button\r\n              onClick={\r\n                location.type === \"external\"\r\n                  ? this.isWithinLocation\r\n                  : this.displayCamera\r\n              }\r\n              modifier=\"large\"\r\n            >\r\n              I am here\r\n            </Button>\r\n          </div>\r\n          {this.props.location.type === \"external\" && (\r\n            <div style={{ margin: \"6px\" }}>\r\n              <Button\r\n                onClick={() => this.getMap(location.address)}\r\n                modifier=\"large outline\"\r\n              >\r\n                Get directions\r\n              </Button>\r\n            </div>\r\n          )}\r\n        </section>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderCamera() {\r\n    return (\r\n      <div>\r\n        <div className=\"LocationPage-QR_description\">\r\n          <p>\r\n            <Icon icon=\"qrcode\" size={68} />\r\n          </p>\r\n          <p>Scan QR code to open a list of activities</p>\r\n        </div>\r\n        <QrReader\r\n          delay={1000}\r\n          onError={this.handleError}\r\n          onScan={this.handleScan}\r\n          style={{ width: \"100%\" }}\r\n        />\r\n        <Button\r\n          onClick={this.hideCamera}\r\n          modifier=\"large\"\r\n          className=\"LocationPage-QR_cancel_btn\"\r\n        >\r\n          Cancel\r\n        </Button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Page\r\n        renderToolbar={() => (\r\n          <NavBar\r\n            title={this.props.location.title}\r\n            navigator={this.props.navigator}\r\n            backButton\r\n          />\r\n        )}\r\n      >\r\n        {this.state.displayCamera\r\n          ? this.renderCamera()\r\n          : this.renderDescription()}\r\n      </Page>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LocationPage;\r\n","import React, { Component } from \"react\";\r\nimport { Page, List, ListItem, Icon, ProgressBar } from \"react-onsenui\";\r\nimport NavBar from \"../NavBar/NavBar\";\r\nimport LocationPage from \"../LocationPage/LocationPage\";\r\nimport axios from \"axios\";\r\nimport \"./LocationsPage.css\";\r\n\r\nconst LOCATIONS_QUERY_URI = \"https://cors-anywhere.herokuapp.com/http://159.203.3.180/api/locations\";\r\nconst PROGRESS_QUERY_URI = \"https://cors-anywhere.herokuapp.com/http://159.203.3.180/api/users/locations\";\r\nconst PROGRESS_UPDATE_URI = \"https://cors-anywhere.herokuapp.com/http://159.203.3.180/api/users/locations/\";\r\n\r\nclass LocationsPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      locations: [],\r\n      locationsCompleted: [],\r\n      isLoading: false,\r\n      errors: \"\"\r\n    };\r\n\r\n    this.handleLocationSelection = this.handleLocationSelection.bind(this);\r\n    this.renderRow = this.renderRow.bind(this);\r\n    this.fetchLocations = this.fetchLocations.bind(this);\r\n    this.fetchLocationsProgress = this.fetchLocationsProgress.bind(this);\r\n    this.setLocationDone = this.setLocationDone.bind(this);\r\n  }\r\n\r\n  fetchLocations() {\r\n    this.setState({ isLoading: true });\r\n\r\n    const headers = {\r\n      Authorization: this.props.token\r\n    };\r\n\r\n    axios\r\n      .get(LOCATIONS_QUERY_URI, { headers })\r\n      .then(res =>\r\n        this.setState({\r\n          locations: res.data,\r\n          isLoading: false\r\n        })\r\n      )\r\n      .catch(err => {\r\n        localStorage.removeItem(\"scavengerHuntTkn\");\r\n        this.setState({\r\n          errors: err.response,\r\n          isLoading: false\r\n        });\r\n      });\r\n  }\r\n\r\n  fetchLocationsProgress() {\r\n    this.setState({ isLoading: true });\r\n\r\n    const headers = {\r\n      Authorization: this.props.token\r\n    };\r\n\r\n    axios\r\n      .get(PROGRESS_QUERY_URI, { headers })\r\n      .then(res =>\r\n        this.setState({\r\n          locationsCompleted: res.data.locationsCompleted,\r\n          isLoading: false\r\n        })\r\n      )\r\n      .catch(err => {\r\n        this.setState({\r\n          errors: err.response,\r\n          isLoading: false\r\n        });\r\n      });\r\n  }\r\n\r\n  setLocationDone(id) {\r\n    const updatedProgress = [...this.state.locationsCompleted, id];\r\n\r\n    const headers = {\r\n      Authorization: this.props.token\r\n    };\r\n\r\n    axios\r\n      .post(`${PROGRESS_UPDATE_URI}${id}`, {}, { headers })\r\n      .then(res => {\r\n        this.setState({ locationsCompleted: updatedProgress });\r\n      })\r\n      .catch(err => {\r\n        console.log(err.response.data);\r\n      });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchLocations();\r\n\r\n    if (!this.state.locationsCompleted.length) {\r\n      this.fetchLocationsProgress();\r\n    }\r\n  }\r\n\r\n  handleLocationSelection(id) {\r\n    this.props.navigator.pushPage({\r\n      component: LocationPage,\r\n      props: {\r\n        location: this.state.locations.find(item => item._id === id),\r\n        isCompleted: this.state.locationsCompleted.includes(id),\r\n        token: this.props.token,\r\n        key: `LOCATION_PAGE_${Date.now()}`,\r\n        setLocationDone: this.setLocationDone\r\n      }\r\n    });\r\n  }\r\n\r\n  renderRow(row, index) {\r\n    return (\r\n      <ListItem\r\n        key={row._id}\r\n        modifier={\r\n          index === this.state.locations.length - 1 ? \"longdivider\" : null\r\n        }\r\n        onClick={() => {\r\n          this.handleLocationSelection(row._id);\r\n        }}\r\n        tappable\r\n      >\r\n        <div className=\"left\" style={{ minWidth: 60, maxWidth: 60 }}>\r\n          <img\r\n            src={row.image}\r\n            className=\"list-item__thumbnail LocationsPage-thumbnail\"\r\n            alt=\"\"\r\n          />\r\n          {this.state.locationsCompleted.includes(row._id) && (\r\n            <Icon\r\n              icon=\"check-circle\"\r\n              size={24}\r\n              className=\"LocationsPage-checkmark\"\r\n            />\r\n          )}\r\n        </div>\r\n        <div className=\"center\">\r\n          <div className=\"list-item__title\">{row.title}</div>\r\n          <div className=\"list-item__subtitle\">{row.subtitle}</div>\r\n        </div>\r\n        <div className=\"right\">\r\n          <Icon icon=\"fa-chevron-right\" style={{ color: \"#CCC\" }} />\r\n        </div>\r\n      </ListItem>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Page\r\n        renderToolbar={() => (\r\n          <NavBar\r\n            title=\"Locations\"\r\n            navigator={this.props.navigator}\r\n            icon={<Icon icon=\"map-marker-alt\" />}\r\n          />\r\n        )}\r\n      >\r\n        {this.state.isLoading && <ProgressBar indeterminate />}\r\n        <List dataSource={this.state.locations} renderRow={this.renderRow} />\r\n      </Page>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LocationsPage;\r\n","import React, { Component } from \"react\";\r\nimport { Page, Input, Button } from \"react-onsenui\";\r\nimport ErrorMsg from \"../ErrorMsg/ErrorMsg\";\r\nimport axios from \"axios\";\r\nimport \"./SignUpPage.css\";\r\n\r\nconst SIGNUP_URI = \"https://cors-anywhere.herokuapp.com/http://159.203.3.180/api/users/register\";\r\n\r\nclass SignUpPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      name: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      password2: \"\",\r\n      errors: []\r\n    };\r\n\r\n    this.handleRegistration = this.handleRegistration.bind(this);\r\n  }\r\n\r\n  handleRegistration() {\r\n    // TO-DO (client-side validation)\r\n    const { errors, ...payload } = this.state;\r\n\r\n    axios\r\n      .post(SIGNUP_URI, payload)\r\n      .then(res => this.props.navigator.popPage())\r\n      .catch(err => this.setState({ errors: err.response.data }));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Page>\r\n        <div className=\"LoginPage\">\r\n          <img src=\"sask-polytech-logo-compressed.png\" width=\"200\" alt=\"Saskatchewan Polytechnic\" />\r\n          <section className=\"LoginPage-form\">\r\n            <p className=\"LoginPage-title\">Sign Up</p>\r\n            <Input\r\n              value={this.state.name}\r\n              onChange={e => this.setState({ name: e.target.value })}\r\n              type=\"text\"\r\n              disable-auto-styling\r\n              placeholder=\"Name\"\r\n              className=\"LoginPage-input\"\r\n            />\r\n            <Input\r\n              value={this.state.email}\r\n              onChange={e => this.setState({ email: e.target.value })}\r\n              type=\"email\"\r\n              disable-auto-styling\r\n              placeholder=\"Email\"\r\n              className=\"LoginPage-input\"\r\n            />\r\n            <Input\r\n              value={this.state.password}\r\n              onChange={e => this.setState({ password: e.target.value })}\r\n              type=\"password\"\r\n              disable-auto-styling\r\n              placeholder=\"Password\"\r\n              className=\"LoginPage-input\"\r\n            />\r\n            <Input\r\n              value={this.state.password2}\r\n              onChange={e => this.setState({ password2: e.target.value })}\r\n              type=\"password\"\r\n              disable-auto-styling\r\n              placeholder=\"Repeat password\"\r\n              className=\"LoginPage-input\"\r\n            />\r\n            {this.state.errors &&\r\n              this.state.errors.map((err, index) => {\r\n                return <ErrorMsg key={index} message={err} />;\r\n              })}\r\n            <Button\r\n              modifier=\"large\"\r\n              className=\"SignUpPage-register_btn\"\r\n              onClick={this.handleRegistration}\r\n            >\r\n              CREATE ACCOUNT\r\n            </Button>\r\n            <Button\r\n              modifier=\"large--quiet\"\r\n              className=\"LoginPage-signup_btn\"\r\n              onClick={() => this.props.navigator.popPage()}\r\n            >\r\n              I've got an account\r\n            </Button>\r\n          </section>\r\n          <img\r\n            src=\"team-logo-white.png\"\r\n            className=\"LoginPage-logo_bottom\"\r\n            width=\"100\"\r\n            alt=\"oowee Entertainment\"\r\n          />\r\n        </div>\r\n      </Page>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SignUpPage;\r\n","import React, { Component } from \"react\";\r\nimport { Page, Input, Button, ProgressBar } from \"react-onsenui\";\r\nimport ErrorMsg from \"../ErrorMsg/ErrorMsg\";\r\nimport LocationsPage from \"../LocationsPage/LocationsPage\";\r\nimport SignUpPage from \"../SignUpPage/SignUpPage\";\r\nimport axios from \"axios\";\r\nimport \"./LoginPage.css\";\r\n\r\nconst LOGIN_URI = \"https://cors-anywhere.herokuapp.com/http://159.203.3.180/api/users/login\";\r\n\r\nclass LoginPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      token: localStorage.getItem(\"scavengerHuntTkn\"),\r\n      errors: [],\r\n      isLoading: false\r\n    };\r\n\r\n    this.handleLogin = this.handleLogin.bind(this);\r\n    this.openSignUpPage = this.openSignUpPage.bind(this);\r\n    this.openLocationsPage = this.openLocationsPage.bind(this);\r\n\r\n    // Skip the login page if the token exists and stored\r\n    if (this.state.token) {\r\n      this.openLocationsPage();\r\n    }\r\n  }\r\n\r\n  openLocationsPage() {\r\n    this.props.navigator.pushPage({\r\n      component: LocationsPage,\r\n      props: {\r\n        key: `LOCATIONS_PAGE_${Date.now()}`,\r\n        token: this.state.token\r\n      }\r\n    });\r\n  }\r\n\r\n  handleLogin() {\r\n    this.setState({ isLoading: true });\r\n    \r\n    const { errors, token, ...payload } = this.state;\r\n\r\n    axios\r\n      .post(LOGIN_URI, payload)\r\n      .then(res => {\r\n        this.setState({\r\n          token: res.data.token,\r\n          isLoading: false\r\n        });\r\n        localStorage.setItem(\"scavengerHuntTkn\", this.state.token);\r\n        this.openLocationsPage();\r\n      })\r\n      .catch(err =>\r\n        this.setState({\r\n          errors: err.response.data,\r\n          isLoading: false\r\n        })\r\n      );\r\n  }\r\n\r\n  openSignUpPage() {\r\n    this.setState({\r\n      email: \"\",\r\n      password: \"\",\r\n      errors: []\r\n    });\r\n\r\n    this.props.navigator.pushPage({\r\n      component: SignUpPage,\r\n      props: { key: \"SIGNUP_PAGE\" }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Page>\r\n        {this.state.isLoading && <ProgressBar indeterminate />}\r\n        <div className=\"LoginPage\">\r\n          <img\r\n            src=\"sask-polytech-logo-compressed.png\"\r\n            width=\"200\"\r\n            alt=\"Saskatchewan Polytechnic\"\r\n          />\r\n          <section className=\"LoginPage-form\">\r\n            <p className=\"LoginPage-title\">Scavenger Hunt</p>\r\n            <Input\r\n              value={this.state.email}\r\n              onChange={e => this.setState({ email: e.target.value })}\r\n              type=\"email\"\r\n              disable-auto-styling\r\n              placeholder=\"Email\"\r\n              className=\"LoginPage-input\"\r\n            />\r\n            <Input\r\n              value={this.state.password}\r\n              onChange={e => this.setState({ password: e.target.value })}\r\n              type=\"password\"\r\n              disable-auto-styling\r\n              placeholder=\"Password\"\r\n              className=\"LoginPage-input\"\r\n            />\r\n            {this.state.errors &&\r\n              this.state.errors.map((err, index) => {\r\n                return <ErrorMsg key={index} message={err} />;\r\n              })}\r\n\r\n            <Button\r\n              modifier=\"large\"\r\n              className=\"LoginPage-login_btn\"\r\n              onClick={this.handleLogin}\r\n            >\r\n              SIGN IN\r\n            </Button>\r\n            <Button\r\n              modifier=\"large--quiet\"\r\n              className=\"LoginPage-signup_btn\"\r\n              onClick={this.openSignUpPage}\r\n            >\r\n              or create new account\r\n            </Button>\r\n          </section>\r\n          <img\r\n            src=\"team-logo-white.png\"\r\n            className=\"LoginPage-logo_bottom\"\r\n            width=\"100\"\r\n            alt=\"OOWEE\"\r\n          />\r\n        </div>\r\n      </Page>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginPage;\r\n","import React from \"react\";\nimport { Navigator } from \"react-onsenui\";\nimport LoginPage from \"./LoginPage/LoginPage\";\nimport \"./App.css\";\n\nconst renderPage = (route, navigator) => {\n  const props = route.props || {};\n  props.navigator = navigator;\n  return React.createElement(route.component, props);\n};\n\nconst App = () => (\n  <Navigator\n    initialRoute={{ component: LoginPage, props: { key: \"LOGIN_PAGE\" } }}\n    renderPage={renderPage}\n    onDeviceBackButton={() => false}\n  />\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nif (module.hot) {\n  module.hot.accept();\n}\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}